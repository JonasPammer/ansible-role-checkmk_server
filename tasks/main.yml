---
# tasks file of ansible-role jonaspammer.checkmk_server

- name: check if all variables have been set correctly
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

- name: Include Tasks for installing CheckMk by using the system package manager.
  ansible.builtin.include_tasks: "install.yml"

- name: Include Tasks for creating defined CheckMk site and ensuring its started.
  ansible.builtin.include_tasks: "create.yml"

- name: Include Tasks for editing site configuration variables (may stop the site).
  ansible.builtin.include_tasks: "edit_site_conf_variable.yml"
  loop:
    - var: "ADMIN_MAIL"
      val: "{{ checkmk_server_site_conf_admin_mail }}"
    - var: "APACHE_MODE"
      val: "{{ checkmk_server_site_conf_apache_mode }}"
    - var: "APACHE_TCP_ADDR"
      val: "{{ checkmk_server_site_conf_apache_tcp_addr }}"
    - var: "APACHE_TCP_PORT"
      val: "{{ checkmk_server_site_conf_apache_tcp_port }}"
    - var: "AUTOSTART"
      val: "{{ checkmk_server_site_conf_autostart }}"
    - var: "CORE"
      val: "{{ checkmk_server_site_conf_core }}"
    - var: "LIVESTATUS_TCP"
      val: "{{ checkmk_server_site_conf_livestatus_tcp }}"
    - var: "MKEVENTD"
      val: "{{ checkmk_server_site_conf_mkeventd }}"
    - var: "MKEVENTD_SNMPTRAP"
      val: "{{ checkmk_server_site_conf_mkeventd_snmptrap }}"
    - var: "MKEVENTD_SYSLOG"
      val: "{{ checkmk_server_site_conf_mkeventd_syslog }}"
    - var: "MKEVENTD_SYSLOG_TCP"
      val: "{{ checkmk_server_site_conf_mkeventd_syslog_tcp }}"
    - var: "MULTISITE_AUTHORISATION"
      val: "{{ checkmk_server_site_conf_multisite_authorisation }}"
    - var: "MULTISITE_COOKIE_AUTH"
      val: "{{ checkmk_server_site_conf_multisite_cookie_auth }}"
    - var: "NAGIOS_THEME"
      val: "{{ checkmk_server_site_conf_nagios_theme }}"
    - var: "NSCA"
      val: "{{ checkmk_server_site_conf_ncsa }}"
    - var: "PNP4NAGIOS"
      val: "{{ checkmk_server_site_conf_pnp4nagios }}"
    - var: "TMPFS"
      val: "{{ checkmk_server_site_conf_tmpfs }}"
  when: checkmk_server_site_conf

- name: execute command to get omd status
  ansible.builtin.command: "omd status"
  changed_when: false
  # command returns non-zero return code if any services (or overall?) are stopped
  failed_when: false
  register: checkmk_server__register_command_omd_status_before

- name: Execute command to start OMD site.
  ansible.builtin.command: "{{ checkmk_server_omd_start_command }}"
  args:
    creates: "{{ checkmk_server_omd_start_creates }}"
  changed_when: false
  register: checkmk_server__register_command_omd_start

- name: execute command to get omd status
  ansible.builtin.command: "omd status"
  changed_when: checkmk_server__register_command_omd_status_before.stdout != checkmk_server__register_command_omd_status_after.stdout
  register: checkmk_server__register_command_omd_status_after
